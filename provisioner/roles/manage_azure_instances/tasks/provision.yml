- name: ensure workshop folder {{azure_name_prefix}} exists
  file:
    path: "{{ playbook_dir }}/{{azure_name_prefix}}"
    state: directory

## These Azure resources are used for every workshop type
## This includes VPC, subnet, Security Group, Internet Gateway and route table
- name: provision Azure resources
  include_tasks: resources.yml

## This duplicates the above when networking workshop uses 2 VPCs
- name: provision networking Azure resources
  include_tasks: resources_networking.yml
  when: networking

## control node setup ###
- name: set control node type
  set_fact:
    ansible_node: "{{ azure_control_node['ansible'] }}"

- name: Create a public ip address
  azure_rm_publicipaddress:
    resource_group: "{{azure_name_prefix}}"
    name: "student{{ item }}"
    allocation_method: Dynamic
    domain_name: "{{ azure_name_prefix|lower }}-student{{ item }}cn"
  with_sequence: start=1 end="{{ student_total }}"

- name: Create a network interface using existing security group and public IP
  azure_rm_networkinterface:
    name: "{{azure_name_prefix}}.CN.student{{ item }}"
    resource_group: "{{azure_name_prefix}}"
    virtual_network: "{{ azure_name_prefix }}-vpc"
    subnet_name: "{{ azure_name_prefix }}-subnet"
    security_group: "{{ azure_name_prefix }}-insecure_all"
    ip_configurations:
      - name: "CN.student{{ item }}.ipconfig1"
        private_ip_allocation_method: Static
        private_ip_address: "{{ azure_subnet.split('.')[0] }}.{{ azure_subnet.split('.')[1] }}.1.{{ item }}"
        public_ip_address_name: "student{{ item }}"
  with_sequence: start=1 end="{{ student_total }}"
  register: network_interface
  when: resource_group.changed

- name: Create Azure instances for ansible node (control node)
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.CN.student{{ item }}"
    vm_size: "{{ azure_instance_types[ansible_node].vm_size }}"
    admin_username: azure-user
    admin_password: "{{ admin_password }}"
    network_interface_names: "{{azure_name_prefix}}.CN.student{{ item }}"
    image:
      offer: "{{ azure_instance_types[ansible_node].offer }}"
      publisher: "{{ azure_instance_types[ansible_node].publisher }}"
      sku: "{{ azure_instance_types[ansible_node].sku }}"
      version: "{{ azure_instance_types[ansible_node].version }}"
    ssh_public_keys:
      - path: /home/azure-user/.ssh/authorized_keys
        key_data: "{{lookup('file', '{{ azure_name_prefix }}-key') }}"
    append_tags: yes
    tags:
      Workshop_ansible: "{{azure_name_prefix}}-ansible"
  with_sequence: start=1 end="{{ student_total }}"
  register: azure_vm

- name: Ensure tags are present
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.CN.student{{ item }}"
    state: present
    append_tags: yes
    tags:
      Name: "{{ azure_name_prefix }}-student{{ item }}-ansible"
      Workshop_ansible: "{{azure_name_prefix}}-ansible"
      Workshop: "{{azure_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{ item }}"
      Username: "{{ azure_login_names['rhel7'] }}"
      # Info: "Username that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "Student Count {{student_total}}"
      short_name: "ansible"
      public_ip_address: "{{ azure_name_prefix|lower }}-student{{ item }}cn.eastus.cloudapp.azure.com"
      private_ip_address: "{{ azure_subnet.split('.')[0] }}.{{ azure_subnet.split('.')[1] }}.1.{{ item }}"
  with_sequence: start=1 end="{{ student_total }}"
  # when: control_output.azure_vm.id is not none

- name: Create a public ip address for login page
  azure_rm_publicipaddress:
    resource_group: "{{azure_name_prefix}}"
    name: "{{ azure_name_prefix|lower }}"
    allocation_method: Dynamic
    domain_name: "{{ azure_name_prefix|lower }}workshop"

- name: Create a network interface using existing security group and public IP for login page
  azure_rm_networkinterface:
    name: "{{azure_name_prefix}}.lgn"
    resource_group: "{{azure_name_prefix}}"
    virtual_network: "{{ azure_name_prefix }}-vpc"
    subnet_name: "{{ azure_name_prefix }}-subnet"
    security_group: "{{ azure_name_prefix }}-insecure_all"
    ip_configurations:
      - name: "{{ azure_name_prefix|lower }}"
        private_ip_allocation_method: Dynamic
        public_ip_address_name: "{{ azure_name_prefix|lower }}"
  register: loginpage_interface
  when: resource_group.changed

- name: Create Azure instances for ansible node (login page)
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.lgn"
    vm_size: "{{ azure_instance_types[ansible_node].vm_size }}"
    admin_username: azure-user
    admin_password: RedHat!@#123
    network_interface_names: "{{azure_name_prefix}}.lgn"
    image:
      offer: "{{ azure_instance_types[ansible_node].offer }}"
      publisher: "{{ azure_instance_types[ansible_node].publisher }}"
      sku: "{{ azure_instance_types[ansible_node].sku }}"
      version: "{{ azure_instance_types[ansible_node].version }}"
    ssh_public_keys:
      - path: /home/azure-user/.ssh/authorized_keys
        key_data: "{{lookup('file', '{{ azure_name_prefix }}-key') }}"
    append_tags: yes
    tags:
      Workshop_loginpage: "{{azure_name_prefix}}-loginpage"
  register: azure_loginpage

- name: Ensure tags are present
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.lgn"
    state: present
    append_tags: yes
    tags:
      Name: "{{azure_name_prefix}}.lgn"
      Workshop_loginpage: "{{azure_name_prefix}}-ansible"
      Workshop: "{{azure_name_prefix}}"
      Username: azure-user
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "Student Count {{student_total}}"
      short_name: "ansible"
      public_ip_address: "{{ azure_name_prefix|lower }}workshop.eastus.cloudapp.azure.com"

## Instance creation
- name: provision ansible engine (essentials) instances
  include_tasks: instances_engine.yml
  when:
    - not networking
    - not f5workshop

- name: provision ansible networking workshop instances
  include_tasks: instances_networking.yml
  when:
    - networking
    - not f5workshop

- name: provision ansible f5 workshop instances
  include_tasks: instances_f5.yml
  when:
    - f5workshop
    - not networking
