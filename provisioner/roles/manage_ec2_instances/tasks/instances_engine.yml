- name: set node types
  set_fact:
    node1_node: "{{ azure_lab_node_types['node1'] }}"
    node2_node: "{{ azure_lab_node_types['node2'] }}"
    node3_node: "{{ azure_lab_node_types['node3'] }}"
  when: not networking

# - name: find ami for node1
#   ec2_ami_facts:
#     region: "{{ ec2_region }}"
#     owners: "{{ azure_instance_types[node1_node].owners }}"
#     filters:
#       name: "{{ azure_instance_types[ansible_node].filter }}"
#       architecture: "{{ azure_instance_types[node1_node].architecture }}"
#   register: amis
#
# - name: save ami for node1
#   set_fact:
#     node1_ami: >
#       {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: Create Azure instances for node1
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.{{ item }}"
    public_ip_allocation_method: Static
    # key_name: "{{ azure_name_prefix }}-key"
    # group: "{{ ec2_security_group }}"
    instance_type: "{{ azure_instance_types[node1_node].vm_size }}"
    image:
      offer: "{{ azure_instance_types[node1_node].offer }}"
      publisher: "{{ azure_instance_types[node1_node].publisher }}"
      sku: "{{ azure_instance_types[node1_node].sku }}"
      version: "{{ azure_instance_types[node1_node].version }}"
    ssh_public_keys:
      - path: /home/azure-user/.ssh/authorized_keys
        key_data: "{{lookup('file', '{{ azure_name_prefix }}-key') }}"
    append_tags: yes
    tags:
      'Workshop_node1': "{{azure_name_prefix}}-node1"
  with_sequence: start=0 end="{{ student_total }}"
  register: node1_output

- name: Ensure tags are present for node1
  ec2_tag:
    resource_group: "{{azure_name_prefix}}"
    name: "{{item.1}}"
    state: present
    append_tags: yes
    tags:
      Name: "{{ azure_name_prefix }}-student{{item.0 + 1}}-node1"
      Workshop_node1: "{{azure_name_prefix}}-node1"
      Workshop: "{{azure_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      # AWS_USERNAME: "{{ linklight_user }}"
      # Info: "AWS_USERNAME that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      short_name: "node1"
  with_indexed_items:
    - "{{ node1_output.instance_ids }}"
  when: node1_output.instance_ids is not none

# - name: find ami for node2
#   ec2_ami_facts:
#     region: "{{ ec2_region }}"
#     owners: "{{ azure_instance_types[node2_node].owners }}"
#     filters:
#       name: "{{ azure_instance_types[ansible_node].filter }}"
#       architecture: "{{ azure_instance_types[node2_node].architecture }}"
#   register: amis

# - name: save ami for node2
#   set_fact:
#     node2_ami: >
#       {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: Create Azure instances for node2
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.{{ item }}"
    public_ip_allocation_method: Static
    # key_name: "{{ azure_name_prefix }}-key"
    # group: "{{ ec2_security_group }}"
    instance_type: "{{ azure_instance_types[node2_node].vm_size }}"
    image:
      offer: "{{ azure_instance_types[node2_node].offer }}"
      publisher: "{{ azure_instance_types[node2_node].publisher }}"
      sku: "{{ azure_instance_types[node2_node].sku }}"
      version: "{{ azure_instance_types[node2_node].version }}"
    ssh_public_keys:
      - path: /home/azure-user/.ssh/authorized_keys
        key_data: "{{lookup('file', '{{ azure_name_prefix }}-key') }}"
    append_tags: yes
    tags:
      'Workshop_node2': "{{azure_name_prefix}}-node2"
  with_sequence: start=0 end="{{ student_total }}"
  register: node2_output

- name: Ensure tags are present for node2
  ec2_tag:
    resource_group: "{{azure_name_prefix}}"
    name: "{{item.1}}"
    state: present
    append_tags: yes
    tags:
      Name: "{{ azure_name_prefix }}-student{{item.0 + 1}}-node2"
      Workshop_node2: "{{azure_name_prefix}}-node2"
      Workshop: "{{azure_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      # AWS_USERNAME: "{{ linklight_user }}"
      # Info: "AWS_USERNAME that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      short_name: "node2"
  with_indexed_items:
    - "{{ node2_output.instance_ids }}"
  when: node2_output.instance_ids is not none

# - name: find ami for node3
#   ec2_ami_facts:
#     region: "{{ ec2_region }}"
#     owners: "{{ azure_instance_types[node3_node].owners }}"
#     filters:
#       name: "{{ azure_instance_types[ansible_node].filter }}"
#       architecture: "{{ azure_instance_types[node3_node].architecture }}"
#   register: amis
#
# - name: save ami for node3
#   set_fact:
#     node3_ami: >
#       {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

- name: Create Azure instances for node3
  azure_rm_virtualmachine:
    resource_group: "{{azure_name_prefix}}"
    name: "{{azure_name_prefix}}.{{ item }}"
    public_ip_allocation_method: Static
    # key_name: "{{ azure_name_prefix }}-key"
    # group: "{{ ec2_security_group }}"
    instance_type: "{{ azure_instance_types[node3_node].vm_size }}"
    image:
      offer: "{{ azure_instance_types[node3_node].offer }}"
      publisher: "{{ azure_instance_types[node3_node].publisher }}"
      sku: "{{ azure_instance_types[node3_node].sku }}"
      version: "{{ azure_instance_types[node3_node].version }}"
    ssh_public_keys:
      - path: /home/azure-user/.ssh/authorized_keys
        key_data: "{{lookup('file', '{{ azure_name_prefix }}-key') }}"
    append_tags: yes
    tags:
      'Workshop_node3': "{{azure_name_prefix}}-node3"
  with_sequence: start=0 end="{{ student_total }}"
  register: node3_output

- name: Ensure tags are present for node3
  ec2_tag:
    resource_group: "{{azure_name_prefix}}"
    name: "{{item.1}}"
    state: present
    append_tags: yes
    tags:
      Name: "{{ azure_name_prefix }}-student{{item.0 + 1}}-node3"
      Workshop_node3: "{{azure_name_prefix}}-node3"
      Workshop: "{{azure_name_prefix}}"
      Index: "{{ item[0] }}"
      Student: "student{{item.0 + 1}}"
      # AWS_USERNAME: "{{ linklight_user }}"
      # Info: "AWS_USERNAME that provisioned this-> {{ linklight_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{student_total}}"
      short_name: "node3"
  with_indexed_items:
    - "{{ node3_output.instance_ids }}"
  when: node3_output.instance_ids is not none
